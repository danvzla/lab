---
 - name: create a directory
   hosts: localhost
   gather_facts: no

   tasks:

   - name: create and push the directory render
     file: path={{playbook_dir}}/render state=directory

 - name: create BGP junos configuration
   hosts: AMS-EX4300
   connection: local
   gather_facts: no

   tasks:

   - name: Render BGP configuration for junos devices
     template: src={{playbook_dir}}/bgp.j2 dest={{playbook_dir}}/render/{{ inventory_hostname }}.conf

   - name: push bgp configuration on devices
     junos_template:
      provider: "{{  credentials }}"
      src: "{{playbook_dir}}/render/{{ inventory_hostname }}.conf"

 - name: wait for peers to establish connections
   hosts: localhost
   gather_facts: no

   tasks:
   - pause: seconds=25

 - name: check bgp states
   hosts: AMS-EX4300
   connection: local
   gather_facts: no
   roles:
   - Juniper.junos

   tasks:
   - name: check bgp peers states
     junos_command:
      provider: "{{  credentials }}"
      commands:
       - show bgp neighbor "{{ item.peer_ip }}"
      waitfor:
      - "result[0].bgp-information.bgp-peer.peer-state eq Established"
      retries: 10
      interval: 2
     with_items:
     - "{{ neighbors}}"

   - name: check if junos devices learnt some routes with BGP
     junos_command:
      provider: "{{  credentials }}"
      commands:
       - show route protocol bgp {{item.peer_loopback}}/32
      waitfor:
       - "result[0].route-information.route-table.rt.rt-destination eq {{item.peer_loopback}}/32"
     with_items:
      - "{{ neighbors }}"

   - name: check if junos devices can ping some dest
     junos_ping:
        host: "{{ junos_host }}"
        user: "{{ ADMUSER }}"
        passwd: "{{ ADMPASS }}"
        dest_ip: "{{ item.peer_loopback }}"
        source_ip: "{{ item.local_ip }}"
        ttl: 1
     with_items:
      - "{{ neighbors }}"
